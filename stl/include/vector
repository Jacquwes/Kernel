#pragma once

#include <memory>
#include <cstdint>

namespace std
{
	template <typename T, typename Allocator = allocator<T>>
	class vector
	{
	public:
#pragma region Member types

		typedef T value_type;
		typedef Allocator allocator_type;
		typedef size_t size_type;
		typedef ptrdiff_t difference_type;
		typedef value_type& reference;
		typedef const value_type& const_reference;
		typedef allocator_traits<allocator_type>::pointer pointer;
		typedef allocator_traits<allocator_type>::const_pointer const_pointer;
		typedef pointer iterator;
		typedef const_pointer const_iterator;

#pragma endregion
	};
}